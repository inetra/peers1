<project name="Peers-versioninfo" default="versioninfo">

  <tstamp>
    <format property="compile.datetime" pattern="yyyy-MM-dd HH:mm:ss"/>
    <format property="compile.year" pattern="yyyy"/>
  </tstamp>

  <target name="versioninfo.prepare">
    <!--exec executable="svn" dir="${versioninfo.dir}">
      <arg value="-q"/>
      <arg value="update"/>
      <arg value="${versioninfo.data}"/>
    </exec-->
  </target>

  <target name="versioninfo.increment" if="inc.build.number">
    <propertyfile file="${versioninfo.dir}/${versioninfo.data}">
      <entry key="build.number" type="int" operation="+" value="1"/>
    </propertyfile>
    <property file="${versioninfo.dir}/${versioninfo.data}"/>
    <exec executable="svn" dir="${versioninfo.dir}">
      <arg line="-q commit -m &quot;version = ${build.number}&quot; ${versioninfo.data}"/>
    </exec>
    <property name="file.version" value="${major.version}.${minor.version}.${micro.version}.${build.number}"/>
    <property name="product.version" value="${major.version}.${minor.version}"/>
    <echo message="Time=${compile.datetime}, Version=${file.version}"/>
    <delete file="${versioninfo.dir}/${versioninfo.rc}"/>
    <delete file="${versioninfo.dir}/${versioninfo.h}"/>
  </target>

  <target name="versioninfo.current" unless="inc.build.number" depends="versioninfo.current.load">
    <dependset>
      <targetfilelist dir="${versioninfo.dir}" files="${versioninfo.rc}"/>
      <srcfilelist dir="${versioninfo.dir}" files="${versioninfo.data}"/>
      <srcfilelist dir="${versioninfo.dir}" files="${versioninfo.template}"/>
      <srcfileset file="${ant.file}"/>
    </dependset>
    <dependset>
      <targetfilelist dir="${versioninfo.dir}" files="${versioninfo.h}"/>
      <srcfilelist dir="${versioninfo.dir}" files="${versioninfo.data}"/>
      <srcfilelist dir="${versioninfo.dir}" files="${versioninfo.template.h}"/>
      <srcfileset file="${ant.file}"/>
    </dependset>
  </target>

  <target name="versioninfo.current.load" unless="file.version">
    <property file="${versioninfo.dir}/${versioninfo.data}"/>
    <property name="file.version" value="${major.version}.${minor.version}.${micro.version}.${build.number}"/>
    <property name="product.version" value="${major.version}.${minor.version}"/>
    <echo message="Time=${compile.datetime}, Version=${file.version}"/>
  </target>

  <target name="versioninfo.copy" depends="versioninfo.increment, versioninfo.current">
    <filterset id="versioninfo.tokens">
      <filter token="BUILD.NUMBER" value="${build.number}"/>
      <filter token="VERSION" value="${file.version}"/>
      <filter token="FILE.VERSION" value="${file.version}"/>
      <filter token="PRODUCT.VERSION" value="${product.version}"/>
      <filter token="COMMA.VERSION" value="${major.version},${minor.version},${micro.version},${build.number}"/>
      <filter token="COMPILE.DATETIME" value="${compile.datetime}"/>
      <filter token="COMPILE.YEAR" value="${compile.year}"/>

      <filter token="banner1.sid" value="${banner1.sid}"/>
      <filter token="banner1.sz"  value="${banner1.sz}"/>
      <filter token="banner1.bn"  value="${banner1.bn}"/>
      <filter token="banner1.bt"  value="${banner1.bt}"/>
      <filter token="banner1.pz"  value="${banner1.pz}"/>

      <filter token="banner2.sid" value="${banner2.sid}"/>
      <filter token="banner2.sz"  value="${banner2.sz}"/>
      <filter token="banner2.bn"  value="${banner2.bn}"/>
      <filter token="banner2.bt"  value="${banner2.bt}"/>
      <filter token="banner2.pz"  value="${banner2.pz}"/>
    </filterset>

    <copy file="${versioninfo.dir}/${versioninfo.template}" tofile="${versioninfo.dir}/${versioninfo.rc}">
      <filterset refid="versioninfo.tokens"/>
    </copy>
    <copy file="${versioninfo.dir}/${versioninfo.template.h}" tofile="${versioninfo.dir}/${versioninfo.h}">
      <filterset refid="versioninfo.tokens"/>
    </copy>
  </target>

  <target name="versioninfo" depends="versioninfo.prepare, versioninfo.copy">
  </target>

</project>
<!-- vim: set ft=Ant :-->
